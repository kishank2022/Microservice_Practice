String url1 = "http://localhost:8087/api/rating/user/"+userId;
String url1 = "http://RATINGSERVICE/api/rating/user/"+userId;
 Ip and port ka dependency hatne ke liye ham directly Service ka name bhi use karsakte hai 
 isko use karne ke liya jha hamne restTemplate ka bean banaaya hai vha us bean ke sath @LoadBalanced bhi use karo 
 // cretaing rest template bean 
	@Bean
	@LoadBalanced
	public RestTemplate restTemplate() {
		return new RestTemplate();
	}
	
	

Feign Client - Feign Client is a declarative HTTP client in Spring Cloud.
main method vali class ko @EnableFeignClients annonate karo
pom.xml - 
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-openfeign</artifactId>
		</dependency>
ek interface banao HotelService ke name se usko annonate karo @FeignClient(name = "HOTELSERVICE"), inside jis service ko use karna hai uska name likho
	@Bean
	@GetMapping("/hotel/api/getHotel/{hotelId}")
	Hotel getHotel(@PathVariable("hotelId") String hotelId);
@Getmapping me url same likho jesa us service ke controller me hai. and @Bean annonate karo,
and use karo is interface ko in our userService with help of Autowired annonation. 




		
<!--		heath check karne ke liye ham yh dependency likhege -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		
		
		
		----circuit breaker dependency---- 
		<dependency>
			<groupId>io.github.resilience4j</groupId>
			<artifactId>resilience4j-spring-boot2</artifactId>
			<version>2.0.2</version> 
		</dependency>
		
		
		
		
		
		
If aap Circuit breaker implement kar rahe ho and, aapka CB call nhi ho ra hai tho, dekho ki 
jo service band hai vha exception aaega unable to connect the servic vala us exception ke catch block me,
exception handle karne ke baad aap vapasus exception ko trhow kar rahe ho 
			e.printStackTrace();
			System.out.println(e.getMessage());
			throw e;
nhi tho yha pe hi exception handle hoga and hamara CB fallback method call hi nhi hoga 




Retry implementation - 
@Retry(name = "ratingHotelRetryName", fallbackMethod = "ratingHotelRetryMethodName")
isko method ke upaar likhna hai

application.properties me -> 
resilience4j:
	  retry:
	    instances:
	      ratingHotelRetryName:
	        max-attempts: 3
	        wait-duration: 5s
		